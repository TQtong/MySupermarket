<UserControl
    x:Class="MySupermarket.Modules.ModuleName.Views.Music.MusicHallView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:custom="clr-namespace:MySupermarket.CustomUserControl.Views;assembly=MySupermarket.CustomUserControl"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:domain="clr-namespace:MySupermarket.Core.Domain;assembly=MySupermarket.Core"
    xmlns:local="clr-namespace:MySupermarket.Modules.ModuleName.Views.Music"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid>
                <custom:PanuonCarouselView />
            </Grid>
            <TabControl Grid.Row="1" Margin="0,5,0,0">
                <TabItem Header="最新歌曲">
                    <DataGrid
                        Margin="0,2,0,0"
                        AutoGenerateColumns="False"
                        CanUserAddRows="False"
                        HeadersVisibility="All"
                        ItemsSource="{Binding MusicInfo}"
                        SelectionUnit="{Binding ElementName=selectionUnitComboBox, Path=SelectedValue}">
                        <DataGrid.Resources>
                            <domain:BindingProxy x:Key="DataContextProxy" Data="{Binding}" />
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn
                                Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}">
                                <DataGridCheckBoxColumn.Header>
                                    <Border Background="Transparent">
                                        <CheckBox IsChecked="{Binding Data.IsAllItems1Selected, Source={StaticResource DataContextProxy}}" />
                                    </Border>
                                </DataGridCheckBoxColumn.Header>
                                <DataGridCheckBoxColumn.HeaderStyle>
                                    <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridCheckBoxColumn.HeaderStyle>
                            </DataGridCheckBoxColumn>
                            <DataGridTextColumn
                                Binding="{Binding SongName}"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                Header="歌曲名" />
                            <!--  if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn  -->
                            <materialDesign:DataGridTextColumn
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                                ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                Header="歌手">
                                <materialDesign:DataGridTextColumn.Binding>
                                    <Binding Path="SingerName">
                                        <Binding.ValidationRules>
                                            <domain:NotEmptyValidationRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </materialDesign:DataGridTextColumn.Binding>
                            </materialDesign:DataGridTextColumn>
                            <!--  set a max length to get an indicator in the editor  -->
                            <DataGridTextColumn
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                                ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                Header="专辑">
                                <DataGridTextColumn.Binding>
                                    <Binding Path="SongAlbum">
                                        <Binding.ValidationRules>
                                            <domain:NotEmptyValidationRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <materialDesign:DataGridTextColumn EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Header="时长">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Right" />
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock
                                                        Text="{Binding}"
                                                        TextAlignment="Right"
                                                        TextWrapping="Wrap" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.ElementStyle>
                                    <Style BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}" TargetType="{x:Type TextBlock}">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                <DataGridTextColumn.Binding>
                                    <Binding Path="SongTime">
                                        <Binding.ValidationRules>
                                            <domain:NotEmptyValidationRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </DataGridTextColumn.Binding>
                            </materialDesign:DataGridTextColumn>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button
                                            Command="{Binding DataContext.PlayMusicCommand, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}"
                                            CommandParameter="{Binding}"
                                            IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                            Style="{StaticResource MaterialDesignIconButton}"
                                            ToolTip="MaterialDesignIconButton">
                                            <materialDesign:PackIcon Kind="Play" />
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
                <TabItem Header="List">
                    <TextBlock Margin="8" Text="Custom Tab 2" />
                </TabItem>
                <TabItem Header="Radio">
                    <TextBlock Margin="8" Text="Custom Tab 3" />
                </TabItem>
                <TabItem Header="Charts">
                    <TextBlock Margin="8" Text="Custom Tab 4" />
                </TabItem>
                <TabItem Header="Singer">
                    <TextBlock Margin="8" Text="Custom Tab 5" />
                </TabItem>
                <TabItem Header="Newest">
                    <TextBlock Margin="8" Text="Custom Tab 6" />
                </TabItem>
            </TabControl>
        </Grid>
    </ScrollViewer>
</UserControl>
